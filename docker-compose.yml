services:
  # ASP.NET Core API Backend
  backend:
    build:
      context: ./barcode-generator-backend
      dockerfile: BarcodeGenerator/Dockerfile
    ports:
      - "8080:80"
    volumes:
      - ./barcode-generator-backend/BarcodeGenerator/wwwroot/uploads:/app/wwwroot/uploads
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/api/excel/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=barcode_db;Username=postgres;Password=postgres
    depends_on:
      - db

  # React Frontend with Nginx
  frontend:
    build:
      context: ./barcode-generator-frontend
      dockerfile: Dockerfile.frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped

  # PostgreSQL Database
  db:
    image: postgres:16
    environment:
      - POSTGRES_DB=barcode_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  uploads:
    driver: local
  pgdata:
    driver: local
